FROM nvcr.io/nvidia/tensorrt:19.06-py3

# Build-time metadata as defined at http://label-schema.org
ARG BUILD_DATE
ARG VCS_REF
ARG VCS_URL
ARG VERSION
ARG ARCH
LABEL org.tensorrt.agent.build-date=$BUILD_DATE \
  org.tensorrt.agent.name="tensorrt agent" \
  org.tensorrt.agent.description="" \
  org.tensorrt.agent.url="https://www.carml.org/" \
  org.tensorrt.agent.vcs-ref=$VCS_REF \
  org.tensorrt.agent.vcs-url=$VCS_URL \
  org.tensorrt.agent.vendor="MLModelScope" \
  org.tensorrt.agent.version=$VERSION \
  org.tensorrt.agent.schema-version="1.0"


# Install Go
ENV GIMME_GO_VERSION "1.12"
ENV GIMME_OS "linux"
ENV GIMME_ARCH $ARCH

LABEL org.golang.version=$GIMME_GO_VERSION
LABEL org.golang.os=$GIMME_OS
LABEL org.golang.arch=$GIMME_ARCH

ADD https://raw.githubusercontent.com/travis-ci/gimme/master/gimme /usr/bin/gimme
RUN chmod +x /usr/bin/gimme
RUN gimme

ENV GOROOT "/root/.gimme/versions/go${GIMME_GO_VERSION}.${GIMME_OS}.${GIMME_ARCH}"
ENV PATH ${GOROOT}/bin:${PATH}

ENV GOPATH "/go"
ENV PATH $GOPATH/bin:$PATH
ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH

# Install Go packages
RUN go get -u github.com/golang/dep/cmd/dep

# Get Go bindings
ENV PKG github.com/rai-project/tensorrt
WORKDIR $GOPATH/src/$PKG

RUN git clone --depth=1 --branch=master https://${PKG}.git . && \
    dep ensure -v -vendor-only

RUN go build -a -installsuffix cgo -ldflags "-s -w -X ${PKG}/Version=${VERSION} -X ${PKG}/GitCommit=${VCS_REF} -X ${PKG}/BuildDate=${BUILD_DATE}"&& \
    cd tensorrt-agent && \
    go install -tags="nolibjpeg" && \
    cd .. && \
    rm -fr vendor

ENTRYPOINT ["tensorrt-agent"]
